{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // Custom Hooks\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await axios.get(url);\n        setData(res.data);\n      } catch (error) {\n        setError(error);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n\n  const reFetch = async () => {\n    setLoading(true);\n\n    try {\n      const res = await axios.get(url);\n      setData(res.data);\n    } catch (error) {\n      setError(error);\n    }\n\n    setLoading(false);\n  };\n\n  console.log(data);\n  return {\n    data,\n    loading,\n    error,\n    reFetch\n  };\n};\n\n_s(useFetch, \"Oicl48iGuYykLyvnN5ILs6bqZ0Y=\");\n\nexport default useFetch; // if we make a API request at first loading is set true and fetched data will get store in 'data' and errors in 'error'.","map":{"version":3,"sources":["C:/Users/susha/OneDrive/Desktop/bookingapp/hotel-booking-system/client/src/hooks/useFetch.js"],"names":["useEffect","useState","axios","useFetch","url","data","setData","loading","setLoading","error","setError","fetchData","res","get","reFetch","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMW,SAAS,GAAG,YAAU;AACxBH,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAG;AACC,cAAMI,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUT,GAAV,CAAlB;AACAE,QAAAA,OAAO,CAACM,GAAG,CAACP,IAAL,CAAP;AACH,OAHD,CAGC,OAAMI,KAAN,EAAY;AACTC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;;AACDD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATD;;AAUAG,IAAAA,SAAS;AACZ,GAZQ,EAYP,CAACP,GAAD,CAZO,CAAT;;AAeA,QAAMU,OAAO,GAAG,YAAU;AACtBN,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACC,YAAMI,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUT,GAAV,CAAlB;AACAE,MAAAA,OAAO,CAACM,GAAG,CAACP,IAAL,CAAP;AACH,KAHD,CAGC,OAAMI,KAAN,EAAY;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;;AACDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GATD;;AAUAO,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,SAAO;AAACA,IAAAA,IAAD;AAAME,IAAAA,OAAN;AAAcE,IAAAA,KAAd;AAAoBK,IAAAA;AAApB,GAAP;AACH,CAhCD;;GAAMX,Q;;AAkCN,eAAeA,QAAf,C,CAEA","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport axios from \"axios\";\r\n\r\n// Custom Hooks\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async ()=>{\r\n            setLoading(true);\r\n            try{               \r\n                const res = await axios.get(url);\r\n                setData(res.data);\r\n            }catch(error){\r\n                setError(error);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        fetchData();\r\n    },[url])  \r\n\r\n\r\n    const reFetch = async ()=>{\r\n        setLoading(true);\r\n        try{               \r\n            const res = await axios.get(url);\r\n            setData(res.data);\r\n        }catch(error){\r\n            setError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n    console.log(data);\r\n    return {data,loading,error,reFetch};\r\n}\r\n\r\nexport default useFetch;\r\n\r\n// if we make a API request at first loading is set true and fetched data will get store in 'data' and errors in 'error'."]},"metadata":{},"sourceType":"module"}